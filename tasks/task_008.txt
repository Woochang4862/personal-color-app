# Task ID: 8
# Title: Create Loading Animation Component
# Status: pending
# Dependencies: 2
# Priority: low
# Description: Develop an engaging loading animation to display while the color analysis is being processed.
# Details:
1. Create a reusable loading component with animation
2. Implement progress indication if possible
3. Add informative messages during loading
4. Ensure accessibility for screen readers

Example implementation:
```jsx
import { useState, useEffect } from 'react';

function LoadingAnimation({ message = 'Analyzing your personal color...' }) {
  const [dots, setDots] = useState('.');
  const [tipIndex, setTipIndex] = useState(0);
  
  const tips = [
    'Did you know? Personal color analysis was developed in the 1980s.',
    'Your skin undertone determines which colors complement you best.',
    'There are four main seasonal color types: Spring, Summer, Fall, and Winter.',
    'Wearing your personal colors can make you look more vibrant and healthy.',
  ];
  
  // Animate the dots
  useEffect(() => {
    const interval = setInterval(() => {
      setDots(prev => prev.length >= 3 ? '.' : prev + '.');
    }, 500);
    
    return () => clearInterval(interval);
  }, []);
  
  // Rotate through tips
  useEffect(() => {
    const interval = setInterval(() => {
      setTipIndex(prev => (prev + 1) % tips.length);
    }, 5000);
    
    return () => clearInterval(interval);
  }, [tips.length]);
  
  return (
    <div className="loading-container text-center py-12" role="alert" aria-live="polite">
      <div className="spinner mb-6">
        {/* SVG spinner or CSS animation */}
        <div className="w-16 h-16 border-4 border-indigo-600 border-t-transparent rounded-full animate-spin mx-auto"></div>
      </div>
      
      <p className="text-xl font-medium mb-2">{message}{dots}</p>
      
      <div className="tip mt-8 p-4 bg-gray-100 rounded-lg max-w-md mx-auto">
        <p className="text-sm text-gray-600">{tips[tipIndex]}</p>
      </div>
    </div>
  );
}

export default LoadingAnimation;
```

# Test Strategy:
1. Verify that the animation displays correctly
2. Test that the dots animation works
3. Verify that tips rotate correctly
4. Test accessibility with screen readers
5. Verify that the component can be easily integrated into different pages
